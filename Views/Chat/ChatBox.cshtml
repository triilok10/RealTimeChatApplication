@model RealTimeChatApplication.Models.ChatMessage
@{
    ViewData["Title"] = "ChatBox";
}

@{

    if (TempData["successMessage"] != null)
    {
        <script>
            toastr.success("@Html.Raw(TempData["successMessage"].ToString())");
        </script>
    }
    if (TempData["errorMessage"] != null)
    {
        <script>
            toastr.error("@Html.Raw(TempData["errorMessage"].ToString())");
        </script>
    }
}
<style>
    * {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
    }

    body, html {
        height: 100%;
        margin: 0;
        font-family: Arial, sans-serif;
    }

    :root {
        --background-color: #ffffff;
        --text-color: #000000;
    }

    [data-theme='dark'] {
        --background-color: #121212;
        --text-color: #ffffff;
    }

    body {
        margin: 0;
        font-family: Arial, sans-serif;
        background-color: var(--background-color);
        color: var(--text-color);
        height: 100vh;
        display: flex;
        flex-direction: column;
        overflow: hidden;
    }

    .container {
        display: flex;
        flex-direction: row;
        height: 100vh;
    }

    .main-container {
        display: flex;
        width: 100%;
        height: 100%;
    }

    .left-panel {
        flex: 0.3;
        background-image: url('../images/svg3.svg');
        background-size: cover;
        background-position: center;
    }

    .chat-container {
        flex: 0.7;
        display: flex;
        flex-direction: column;
        padding: 10px;
        height: 100vh;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        overflow-y: auto;
    }

    .chat-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        background-color: #44426e;
        color: white;
        padding: 10px;
    }

    .settings-container {
        position: relative;
    }

    .settings-button {
        background: none;
        border: none;
        color: white;
        cursor: pointer;
    }

    .settings-dropdown {
        display: none;
        position: absolute;
        right: 0;
        background-color: white;
        border-radius: 5px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
        z-index: 1;
    }

    .settings-container:hover .settings-dropdown {
        display: block;
    }

    .settings-dropdown ul {
        list-style-type: none;
        padding: 10px;
        margin: 0;
    }

    .settings-dropdown li {
        padding: 5px 10px;
    }

        .settings-dropdown li a {
            text-decoration: none;
            color: black;
        }

        .settings-dropdown li:hover {
            background-color: #f1f1f1;
        }

    .search-container {
        display: flex;
        margin: 10px 0;
    }

        .search-container input[type='text'] {
            flex-grow: 1;
            padding: 10px;
            border-radius: 5px;
            border: 1px solid #ccc;
        }

    .search-button {
        background-color: #007bff;
        color: white;
        border: none;
        padding: 10px;
        border-radius: 5px;
        cursor: pointer;
        margin-left: 5px;
    }

        .search-button:hover {
            background-color: #0056b3;
        }

    .connection-list {
        max-height: 50%;
        overflow-y: auto;
        border: 1px solid #ccc;
        border-radius: 5px;
        margin-top: 10px;
    }

    .connection-list-item {
        padding: 10px;
        cursor: pointer;
        border-bottom: 1px solid #ddd;
        display: inline-flex;
        justify-content: space-between;
        width: 100%;
    }

    .profile-info {
        display: block;
        text-align: center;
    }

    .connection-list-item:last-child {
        border-bottom: none;
    }

    .connection-list-item:hover {
        background-color: #f1f1f1;
    }

    @@media (max-width: 768px) {
        .main-container {
            flex-direction: column;
        }

        .left-panel {
            height: 200px;
            flex: none;
        }

        .chat-container {
            height: auto;
            max-height: 80vh;
        }
    }

    @@media (max-width: 480px) {
        .left-panel {
            display: none;
        }
    }

    @@media (max-width: 768px) {
        .left-panel {
            display: none;
        }
    }
</style>

<body>
    <div class="container">
        <div class="main-container">
            <div class="left-panel"></div>
            <div class="container chat-container">
                <div class="chat-header">
                    <h1 class="text-center">Chat Application</h1>
                    <div class="settings-container">
                        <button class="settings-button"><i class="fas fa-cog"></i> Settings</button>
                        <div class="settings-dropdown">
                            <ul>
                                <li><a href="#">Account Settings</a></li>
                                <li><a href="#">Privacy</a></li>
                                <li><a href="#">Connections</a></li>
                                <li><a href="@Url.Action("LogOut","Login")">Logout</a></li>
                            </ul>
                        </div>
                    </div>
                </div>

                <div class="search-container">

                    <input type="text" id="searchConnections" placeholder="Search for new connections..." class="form-control" />
                    <button type="submit" class="btn search-button" onclick="searchConnections()">Search</button>

                </div>

                <div class="connection-list">
                    @*  <div class="connection-list-item">User A</div>
                    <div class="connection-list-item">User B</div>
                    <div class="connection-list-item">User C</div>
                    <div class="connection-list-item">User D</div>
                    <div class="connection-list-item">User E</div> *@
                </div>
            </div>
        </div>

    </div>
</body>

<script type="text/javascript">


    function searchConnections() {
        var value = $("#searchConnections").val();


        $.ajax({
            url: "@Url.Action("SearchConnections", "CHAT")",
            type: "POST",
            data: {
                SearchConnection: value
            },
            success: function (res) {
                if (res.lstChat != null) {

                    var resultsContainer = document.querySelector(".connection-list");
                    resultsContainer.innerHTML = '';

                    if (res.lstChat.length === 0) {
                        resultsContainer.innerHTML = '<p class="text-center">No profiles found.</p>';
                        return;
                    }

                    res.lstChat.forEach(function (post) {
                        resultsContainer.innerHTML += `
                                                            <div class="connection-list-item">
                                                                <img src="${'https://via.placeholder.com/100'}" alt="Profile Photo" loading="lazy" class="profile-img"/>
                                                                <div class="profile-info">
                                                                        <h3>${post.searchConnection || 'No Username'}</h3>
                                                                        <a href="@Url.Action("ChatMessage", "Chat")?Id=${post.chatMessageID}">View Profile</a>
                                                                </div>
                                                            </div>
                                                        `;
                    });
                }
            },
            error: function (err) {
                console.error("Error fetching connections:", err);
            }
        })
    }

</script>

