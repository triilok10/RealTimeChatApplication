@model RealTimeChatApplication.Models.ChatUser


@{
    ViewData["Title"] = "Register";
}
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/js/toastr.min.js"></script>
<link href="~/js/toastr.min.css" rel="stylesheet" />
@{
    if (TempData["errorMessage"] != null)
    {
        <script>
            toastr.error("@TempData["errorMessage"]");
        </script>

    }
}


<style>
* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body, html {
    height: 100%;
    margin: 0;
    font-family: Arial, sans-serif;
}

.container {
    display: flex;
    flex-direction: row;
    height: 100vh;
}

.image-section {
    width: 30%;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: #f0f0f0;
}

.registration-section {
    width: 70%;
    padding: 40px;
    background-color: #fff;
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
}

.responsive-image {
    width: 100%;
    height: auto;
}

/* Responsive styles for smaller screens */
@@media (max-width: 768px) {
    .container {
        flex-direction: column;
    }
    
    .image-section, .registration-section {
        width: 100%;
    }
    
    .registration-section {
        padding: 20px;
    }
}

</style>
<script src="~/js/webcam.min.js"></script>
<div class="container">
    <div class="image-section" style="background-image: url('../images/registerChat.svg'); background-size: cover; background-position: center; height:auto;">
        
    </div>

    <div class="registration-section">
        <h2>Registration Form</h2>
        <form asp-controller="Login" asp-action="Login" method="post" class="flex-grow-1 d-flex flex-column">

             <div class="profile-picture-container mb-3">

                <div id="my_camera" style="width:auto; height:auto; display:none;"></div>
                <a href="javascript:void(0)" id="captureProfileButton" onclick="toggleCamera()">
                    <img src="~/images/camera-svgrepo-com.svg" style="height:50px;" />
                </a>
                <button type="button" class="btn btn-secondary mt-2" id="captureButton" style="display:none;" onclick="takeSnapshot()">Capture</button>

                <input type="hidden" asp-for="ProfilePictureURLCamera" id="ProfilePictureURLCamera">


                <input type="file" asp-for="ProfilePictureURL" accept="image" id="fileInput" onchange="loadFile(event)" style="display:none;">
                <button type="button" class="btn btn-secondary mt-2" onclick="document.getElementById('fileInput').click();">Select Profile Picture</button>

                <img id="profilePicturePreview" class="profile-picture-preview mt-2" src="" alt="Profile Picture Preview">
                <small class="form-text text-muted">Upload or capture a profile picture (optional).</small>
            </div>


                        <div class="form-group">
                            <label for="username" class="text-muted">Username</label>
                            <input asp-for="UserName" class="form-control" type="text" id="username" name="username" />
                        </div>
                        <div class="form-group">
                            <label for="email" class="text-muted">Email</label>
                            <input asp-for="Email" class="form-control" type="email" id="email" name="email" />
                        </div>
                         <div class="form-group">
                            <label for="Gender" class="text-muted">Gender</label>
                            <select asp-for="Gender" class="form-control" id="Gender">
                    <option value="0">Select Gender</option>
                    @foreach (var item in Enum.GetValues(typeof(RealTimeChatApplication.Models.ChatUser.GenderType)))
                    {
                        <option value="@item">@item</option>
                    }
                </select>

                        </div>
                         <div class="form-group">
                            <label for="password" class="text-muted">Password</label>
                            <input asp-for="Password" class="form-control" type="password" id="password" name="password" />
                        </div>
                         <div class="form-group">
                            <label for="ConfirmPassword" class="text-muted">Confirm Password</label>
                            <input asp-for="ConfirmPassword" class="form-control" type="password" id="confirmPassword" name="ConfirmPassword" />
                        </div>
                         <input type="hidden" asp-for="Longitude" id="Longitude" value="" />
            <input type="hidden" asp-for="Latitude" id="Latitude" value="" />
            <input type="hidden" asp-for="TermsCondition" id="TermsCondition" value="" />

            <div class="form-group">
                <a href="javascript:void(0)"> Terms and Condition.</a>
 <br/>
                        <button type="submit" class="btn btn-primary btn-block mt-auto">Sign In</button>
       </form>

        
    </div>
</div>
<script type="text/javascript">

    toastr.options = {
        "closeButton": false,
        "debug": false,
        "newestOnTop": false,
        "progressBar": false,
        "positionClass": "toast-top-right",
        "preventDuplicates": false,
        "onclick": null,
        "showDuration": "300",
        "hideDuration": "1000",
        "timeOut": "5000",
        "extendedTimeOut": "1000",
        "showEasing": "swing",
        "hideEasing": "linear",
        "showMethod": "fadeIn",
        "hideMethod": "fadeOut"
    };


    Webcam.set({
        width: 320,
        height: 240,
        image_format: 'jpeg',
        jpeg_quality: 90
    });

    function toggleCamera() {
        const cameraDiv = document.getElementById('my_camera');
        document.getElementById('captureProfileButton').style.display = 'none';
        if (cameraDiv.style.display === 'none') {
            cameraDiv.style.display = 'block';
            Webcam.attach(cameraDiv);
            document.getElementById('captureButton').style.display = 'block';
            document.getElementById('profilePicturePreview').style.display = 'none';
        } else {
            cameraDiv.style.display = 'none';
            Webcam.reset();
            document.getElementById('captureButton').style.display = 'none';
        }
    }

    function takeSnapshot() {
        Webcam.snap(function (data_uri) {

            document.getElementById('ProfilePictureURLCamera').value = data_uri;

            document.getElementById('profilePicturePreview').src = data_uri;

            document.getElementById('profilePicturePreview').style.display = 'block';

            document.getElementById('my_camera').style.display = 'none';
            Webcam.reset();
            document.getElementById('captureButton').style.display = 'none';
            document.getElementById('captureProfileButton').style.display = 'block';
        });
    }

    function loadFile(event) {
        const file = event.target.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function (e) {
                document.getElementById('profilePicturePreview').src = e.target.result;
                document.getElementById('profilePicturePreview').style.display = 'block';
                document.getElementById('my_camera').style.display = 'none';
                Webcam.reset();
            }
            reader.readAsDataURL(file);
        }
    }

    function geoLocation() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(showPosition, showError, {
                enableHighAccuracy: true,
                timeout: 10000,
                maximumAge: 0
            });
        } else {
            alert("Geolocation is not supported by this browser.");
        }
    }

    function showPosition(position) {
        const latitude = position.coords.latitude;
        const longitude = position.coords.longitude;

        document.getElementById("Latitude").value = latitude;
        document.getElementById("Longitude").value = longitude;

        console.log("Latitude: " + latitude + ", Longitude: " + longitude);
    }

    function showError(error) {
        switch (error.code) {
            case error.PERMISSION_DENIED:
                alert("User denied the request for Geolocation.");
                break;
            case error.POSITION_UNAVAILABLE:
                alert("Location information is unavailable.");
                break;
            case error.TIMEOUT:
                alert("The request to get user location timed out.");
                break;
            case error.UNKNOWN_ERROR:
                alert("An unknown error occurred.");
                break;
        }
    }
    window.onload = geoLocation;

    function jsValidateSubmit() {
        var username = $("#username").val().trim();
        var email = $("#email").val().trim();
        var password = $("#password").val().trim();
        var confirmPassword = $("#confirmPassword").val().trim();
        var gender = $("#Gender").val();
        var termsCondition = $("#TermsCondition").val();
        var passwordRegex = /^(?=.[a-z])(?=.[A-Z])(?=.\d)(?=.[\W_]).{8,}$/;

        if (!username) {
            $("#username").addClass("border-Danger");
            toastr.error("Please enter the Username");
            return false;
        } else {
            $("#username").removeClass("border-Danger");
        }

        if (!email) {
            toastr.error("Please enter the Email");
            $("#email").addClass("border-Danger");
            return false;
        } else {
            $("#email").removeClass("border-Danger");
        }

        if (gender === "0" || gender === null) {
            toastr.error("Please select a Gender");
            $("#Gender").addClass("border-Danger");
            return false;
        } else {
            $("#Gender").removeClass("border-Danger");
        }

        if (!passwordRegex.test(password)) {
            toastr.error("Password must contain at least one lowercase letter, one uppercase letter, one digit, and one special character.");
            $("#password").addClass("border-Danger");
            return false;
        } else {
            $("#password").removeClass("border-Danger");
        }


        if (!confirmPassword) {
            toastr.error("Please enter the Confirm Password");
            $("#confirmPassword").addClass("border-Danger");
            return false;
        } else {
            $("#confirmPassword").removeClass("border-Danger");
        }



        if (password !== confirmPassword) {
            toastr.error("Password and Confirm Password must be the same");
            return false;
        }

        if (termsCondition == false || termsCondition == "") {
            toastr.error("Please read the Terms and Condition");
            return false;
        }


        return true;
    }


    function js_TermsandCondition() {

        var termsValue = document.getElementById("TermsCondition").value;

        var termsValueCheck = "";
        if (termsValue == "true") {
            termsValueCheck = termsValue;
            $("#registerContainer").hide();
            $("#registerContainer").addClass("containerBlockRepeat");
        } else {
            termsValueCheck = "false";
        }

        $.ajax({
            url: "@Url.Action("_partialTermsCondition", "Login")",
            type: "GET",
            data: { termsValueCheck: termsValueCheck },
            cache: false,
            success: function (res) {
                $("#registerContainer").addClass("register-containerBlock");
                $("#termsConditionContainer").html(res).slideDown();
                document.getElementById("TermsCondition").value = true;
            }
        })

    }

</script>